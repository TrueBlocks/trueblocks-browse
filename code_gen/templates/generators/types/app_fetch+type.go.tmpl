{{ $itemName := .ItemName}}
{{ $hasItems := and (gt (len $itemName) 0) true }}
{{ $isHistory := eq .Class "History" -}}
{{ $routeLower := toLower .UiRouteName }}
{{ $needsPaging := .Needs "paging" }}

// This file is auto-generated. Edit only code inside
// of ExistingCode markers (if any).
package app

// EXISTING_CODE
// EXISTING_CODE

func (a *App) Fetch{{.Class}}(first, pageSize int) *types.{{.Class}}Container {
	// EXISTING_CODE
	// EXISTING_CODE

{{if $needsPaging -}}
{{if $isHistory -}}
	_ = history.CollateAndFilter(a.filterMap)
	first = base.Max(0, base.Min(first, len(history.Items)-1))
	last := base.Min(len(history.Items), first+pageSize)
	copy, _ := history.ShallowCopy().(*types.HistoryContainer)
	copy.Balance = a.getBalance(address)
	copy.Items = history.Items[first:last]
{{- else -}}
	filtered := a.{{$routeLower}}.CollateAndFilter(a.filterMap){{if $hasItems}}.([]{{.ItemFullType}}){{end}}
	first = base.Max(0, base.Min(first, len(filtered)-1))
	last := base.Min(len(filtered), first+pageSize)
	copy, _ := a.{{$routeLower}}.ShallowCopy().(*types.{{.Class}}Container)
	copy.Items = filtered[first:last]
{{- end}}
{{- else -}}
	_ = a.{{$routeLower}}.CollateAndFilter(a.filterMap)
	copy, _ := a.{{$routeLower}}.ShallowCopy().(*types.{{.Class}}Container)
{{- end}}
	return copy
}
